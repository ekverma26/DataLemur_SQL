# Problem Statement  
Assume you're given two tables containing data about Facebook Pages and their respective likes (as in "Like a Facebook Page").  

Write a query to return the IDs of the Facebook pages that have zero likes.  
The output should be sorted in ascending order based on the page IDs.  

---

## Tables  

### `pages` Table  

| Column Name | Type    |  
|-------------|---------|  
| page_id     | integer |  
| page_name   | varchar |  

#### Example Input  

| page_id | page_name               |  
|---------|-------------------------|  
| 20001   | SQL Solutions           |  
| 20045   | Brain Exercises         |  
| 20701   | Tips for Data Analysts  |  

---

### `page_likes` Table  

| Column Name | Type    |  
|-------------|---------|  
| user_id     | integer |  
| page_id     | integer |  
| liked_date  | datetime |  

#### Example Input  

| user_id | page_id | liked_date          |  
|---------|--------|---------------------|  
| 111     | 20001  | 04/08/2022 00:00:00 |  
| 121     | 20045  | 03/12/2022 00:00:00 |  
| 156     | 20001  | 07/25/2022 00:00:00 |  

---

## Expected Output  

| page_id |  
|---------|  
| 20701   |  

---

## Explanation  
- The `pages` table contains all Facebook pages.  
- The `page_likes` table records which users have liked which pages.  
- The **page with ID `20701`** has **zero likes**, as it does not appear in the `page_likes` table.  
- The output is sorted in ascending order by `page_id`.  

The dataset you are querying against may have different input & output - this is just an example! ðŸš€


SQL QUERY:
SELECT P.page_id 
FROM pages AS p left join page_likes as pl 
on p.page_id = pl.page_id
where pl.page_id is null
order by pl.page_id ASC;
